(defwidget bar []
  (box :class "bar"
    (centerbox :orientation "v"
      (left)
      (center)
      (rigth)
    )
  )
)

;----LeftSide
(defwidget left []
  (box :orientation "v" :halign "center" :space-evenly "false" :spacing 8 
    (startMenu)
    (workspaces)
  )
)

(defvar isMenuOpen "false")
(defwidget startMenu []
  (box :orientation "v" :halign "center" :space-evenly "false"
    (eventbox
        :onclick "bash ./scripts/widget.sh"
    (box
      :class "startMenu"
      :orientation "v"
      :space-evenly true
      (image
        :class "image"
        :path "./assets/nixos-icon.png"
        :image-width 20
        :image-height 20
      )

    )
    )
  )
)

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}"
    (box :class "workspaces-widget buttonStyle" :orientation "v" :halign "center" :valign "center"
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box
            :class "workspace-entry"
            (label
              :class "${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            :text "${workspace.id}")
            ;:text "${workspace.id == current_workspace ? "󱓻" : ""}")
          )
        )
      )
    )
  )
)

;Center
(defwidget center []
  (box :orientation "h" :halign "center"
    (clock)
  )
)

;(defpoll date :interval "3600s" "scripts/date-time.sh date")
(defpoll hour :interval "10s" "date +%H")
(defpoll mins :interval "5s" "date +%M")
(defwidget clock []
  (box :class "clock buttonStyle"
    :orientation "v"
    :space-evenly false
    :halign "start"
    :spacing 6

    (eventbox 
      :onclick "scripts/calendar.sh show"
      (box
        :orientation "v"
        :class "clockb"
        (label
          :text "${hour}")
        (label
          :text "${mins}")
      )
    )

  )
)

;RigthSide
(defwidget rigth []
  (box
    ; :class "buttonStyle"
    :class "rightside"
    :orientation "v"
    :valign "end"
    :space-evenly false
    :spacing 10
    ;(label :text "Success = Commitment - Distractions")
    (systemStats)
    (stray)
    (button :onclick "scripts/network.sh ShowInfo" network)
    ;(volume)
  )
)

(defpoll network :interval "5s"
"scripts/network.sh")
(defwidget systemStats []
  (box :class "stats"
    :orientation "v"
    :space-evenly true
    :halign "center"
    :spacing 4
    
    (label :text "${round(EWW_TEMPS.K10TEMP_TCTL, 0)}°" :class "yellow stats")
    (circularProgress :value {EWW_CPU.avg} :label "󰓅 " :onclick "")
  )
)

(defwidget stray []
  (systray :class "systray buttonStyle"
    :space-evenly false
    :orientation "v"
    :halign "center"
    :spacing 5
    :icon-size 18
  ))

; (defvar volumeSlideStatus "false")
; ;(defpoll volume :interval "60s" "amixer get Master | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1")
; (defwidget volume []
;   (eventbox
;     ; :cursor "pointer"
;     :onhover "eww update volumeSlideStatus=true"
;     :onhoverlost "eww update volumeSlideStatus=false"
;     (box :class "audio"
;       :orientation "v"
;       :space-evenly false
;       :halign "center"
;       :valign "start"
;       :spacing 2
;       (label
;       :text "${volume < 1 ? " " : " "}")
;       (revealer
;         :transition "slideup"
;         :reveal volumeSlideStatus
;         :duration "550ms"
;         (metric :label ""
;           :value volume
;         :onchange "~/.config/scripts/volumecontrol set {}")
;       )
;     )
;   )
; )

(defwidget metric [label value onchange]
  (box :orientation "v"
    :class "metric"
    :space-evenly false
    :spacing 5
    (label :class "label"  :text label)
    (scale :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange
    )
  )
)

(defwidget circularProgress [value label onclick]
  (box :class "circular no-style" :orientation "v" :vexpand "false" :hexpand "false" :space-evenly true
    (circular-progress
      :value value
      :start-at 75
      :thickness 4
      :class "barCircular"
    )
    
    (button
      :class "iconCircular no-style"
      :onclick {onclick != ""}
      label
    )
  )
)

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
    :y "0%"
    :width "20px"
    :height "100%"
  :anchor "top left")
  :stacking "fg"
  :geometry (geometry :x 0 :y 0 :width "40px" :height "100%" :anchor "center left")
  :reserve (struts :distance "40px" :side "left")
  :exclusive true
  (bar)
)

(include "./widgets/eww.yuck")
